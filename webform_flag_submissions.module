<?php

/**
 * @file
 * Webform Flag Submissions.
 */

/**
 * Implementation of hook_flag_definitions().
 */
function webform_flag_submissions_flag_definitions() {
  return array(
    'webform_submission' => array(
      'title' => t('Webform submissions'),
      'description' => t('Webform submissions are used to collect information.'),
      'handler' => 'webform_flag_submissions',
    ),
  );
}

/**
 * Implementation of template_preprocess_page().
 */
function webform_flag_submissions_preprocess_page(&$variables) {
  
  if (isset($variables['theme_hook_suggestions'])) {
    // Submission page.
    if (in_array('page__node__submission', $variables['theme_hook_suggestions'])) {
      $variables['nid'] = arg(1);
      $variables['sid'] = arg(3);
      $variables = theme('webform_flag_submissions_flags', $variables);
    }
  }
  //dpm($variables);

  // submission page
  /*if (is_numeric($nid) && is_numeric($sid)) {
    $variables = theme('webform_flag_submissions_flags', $nid, $sid, $variables);
  }

  // submission list page
  if (in_array('page-node-webform-results', $variables['template_files'])) {
    $variables = theme('webform_flag_submissions_flags', $nid, 'list', $variables);
  }*/
}

/**
 * Implementation of hook_theme()
 */
function webform_flag_submissions_theme() {
  return array(
    'webform_flag_submissions_flags' => array(
      'arguments' => array('nid' => NULL, 'sid' => NULL, 'variables' => NULL),
    ),
  );
}

/**
 * Theme function to inject flag links into node/%/submission/% pages.
 */
function theme_webform_flag_submissions_flags($variables) {
  $links = array();
  $flags = flag_get_flags('webform_submission');
  foreach ($flags as $flag) {
    if ($flag->webform_flag_submissions_show_on_submissions_page != 0) {
      // Join the nid and sid together for the flag caching mechanism.
      $links[] = flag_create_link($flag->name, $variables['sid'] . '-' . $variables['nid']);
    }
  }
  $variables['page']['content']['system_main']['#submission_content'] =
    join('', $links) .
    $variables['page']['content']['system_main']['#submission_content'];
  return $variables;
}

/*function webform_flag_submissions_preprocess_webform_results_submissions(&$vars) {
  // generate flag links
  $flags_used = array();
  foreach (flag_get_flags('submission') as $flag) {
    foreach($vars['table']['#rows'] as $id => $row) {
      // have to join the nid and sid together due to the flag cacheing mechanism
      $flag_code = flag_create_link($flag->name, $row[0] . '-' . $vars['node']->nid);
      $vars['table']['#rows'][$id][] = $flag_code;

      // keep track of which flags were used so we can build headers
      if ($flag_code) $flags_used[$flag->name] = true;
    }
  }
  
  // Add flag headers in
  foreach (flag_get_flags('submission') as $flag) {
    if (array_key_exists($flag->name, $flags_used)) 
      $vars['table']['#header'][] = array('data' => $flag->title, 'field' => $flag->name);
  }
}*/
