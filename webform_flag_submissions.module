<?php

/**
 * @file
 * Webform Flag Submissions.
 */

/**
 * Implementation of hook_flag_type_info().
 */
function webform_flag_submissions_flag_type_info() {
  return array(
    'webform_submission' => array(
      'title' => t('Webform submissions'),
      'description' => t('Webform submissions are used to collect information.'),
      'handler' => 'webform_flag_submissions',
    ),
  );
}

function webform_flag_submissions_preprocess_webform_submission_page(&$vars) {
  // Create links for any flags that are enabled for this webform.
  $links = array();
  $flags = flag_get_flags('webform_submission');
  foreach ($flags as $flag) {
    if (in_array($vars['node']->nid, $flag->types) && $flag->webform_flag_submissions_show_on_submissions_page != 0) {
      $links[] = '<li>' . flag_create_link($flag->name, arg(3)) . '</li>';
    }
  }

  // Insert the links last in the submission action links.
  if (!empty($links)) {
    $vars['submission_actions'] = str_replace('</ul>', join('', $links) . '</ul>', $vars['submission_actions']);
  }
}

function webform_flag_submissions_preprocess_webform_results_submissions(&$vars) {
  // Create links for any flags that are enabled for this webform.
  $flags = flag_get_flags('webform_submission');
  $flags_used = array();
  foreach ($flags as $flag) {
    if (in_array($vars['node']->nid, $flag->types) && $flag->webform_flag_submissions_show_on_submissions_page != 0) {
      foreach($vars['table']['#rows'] as $id => $row) {
        $vars['table']['#rows'][$id][] = flag_create_link($flag->name, $row[0]);
      }

      // Keep track of which flags were used so we can build set the right colspan.
      $flags_used[$flag->name] = true;
    }
  }
  
  // Add colspan to the actions table header.
  $last = array_pop($vars['table']['#header']);
  $last['colspan'] += count($flags_used);
  array_push($vars['table']['#header'], $last);
}
